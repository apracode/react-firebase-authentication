{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/Landing/out.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/Message.js","components/Home/FormMessage.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","className","type","onClick","HOME","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","to","ROUTES","id","SignOut","NavigationNonAuth","Navigation","Landing","LandingOut","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","set","catch","preventDefault","onChange","target","name","isInvalid","placeholder","disabled","message","SignUpLink","class","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","Message","objDiv","document","getElementById","scrollTop","scrollHeight","userName","FormMessage","list","messageRef","child","listenMessages","on","Object","values","val","e","newItem","key","handleSend","console","log","action","map","item","handleChange","bind","onKeyPress","handleKeyPress","HomePage","snapshot","usersObject","usersList","keys","PasswordChangeForm","PasswordChange","AdminPage","loading","UserList","exact","path","component","LandingPage","AccountPage","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93ceba79.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n  \n  users = () => this.db.ref('users');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button className=\"signButton\" type=\"button\" onClick={firebase.doSignOut}>\n    SIGN OUT\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const LANDINGIN = '/';\nexport const LANDINGOUT = '/landing';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n        users: []\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          authUser\n            ? this.setState({ authUser })\n            : this.setState({ authUser: null });\n        },\n      );\n\n      \n      \n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport SignOutButton from \"../SignOut\";\nimport * as ROUTES from \"../../constants/routes\";\n\nimport { AuthUserContext } from \"../Session\";\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {authUser => (authUser ? <NavigationAuth /> : <NavigationNonAuth />)}\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = () => (\n  <ul className=\"header\">\n    <li>\n      <Link to={ROUTES.LANDINGOUT}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.HOME}>Chat room</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ADMIN}>Users</Link>\n    </li>\n    <li id=\"signOut\">\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul className=\"header\">\n    <li>\n      <Link to={ROUTES.LANDINGIN}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nexport default Navigation;\n","import React from 'react';\n\nconst Landing = () => (\n  <div>\n    <h1>Welcome to realtime chatroom</h1>\n    <h2>For chating with other users you need to SIGN IN</h2>\n  </div>\n);\n\nexport default Landing;\n","import React from 'react';\n\nconst LandingOut = () => (\n  <div>\n    <h1>Welcome to realtime chatroom</h1>\n    <h2>Go to Chat room to start messaging</h2>\n  </div>\n);\n\nexport default LandingOut;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>Sign Up</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form className=\"passwords\" onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p class=\"center\">\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>Password Forget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form className=\"passwords\" onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p className=\"center\">\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>Sign In</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form className=\"passwords\" onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React from \"react\";\n\nclass Message extends React.Component {\n    componentDidMount(){\n    var objDiv = document.getElementById(\"scrollDiv\");\n\n    objDiv.scrollTop = objDiv.scrollHeight;\n\n    }\n  render() {\n    var objDiv = document.getElementById(\"scrollDiv\");\n    objDiv.scrollTop = objDiv.scrollHeight;\n    return (\n          <div className={this.props.class}>\n              <p className=\"messName\">{this.props.message.userName}:</p>\n\n            <p className=\"mess\">{this.props.message.message}</p>\n          </div>\n\n    );\n  }\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport firebase from \"firebase\";\n\nclass FormMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      message: \"\",\n      list: []\n    };\n\n    this.messageRef = firebase\n      .database()\n      .ref()\n      .child(\"messages\");\n    this.listenMessages();\n  }\n\n  componentDidMount() {\n    this.messageRef.on(\"value\", message => {\n      this.setState({ list: Object.values(message.val()) });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({ message: event.target.value });\n    event.preventDefault();\n  }\n\n  handleSend(e) {\n    if (this.state.message) {\n      var newItem = {\n        userName: this.props.user,\n        message: this.state.message\n      };\n      this.messageRef.push(newItem);\n\n      this.setState({ message: \"\" });\n      var objDiv = document.getElementById(\"scrollDiv\");\n      objDiv.scrollTop = objDiv.scrollHeight;\n    }\n\n    e.preventDefault();\n  }\n\n  handleKeyPress(event) {\n    if (event.key !== \"Enter\") return;\n    this.handleSend(event);\n  }\n\n  listenMessages() {\n    this.messageRef.on(\"value\", message => {\n      this.setState({ list: Object.values(message.val()) });\n    });\n  }\n\n  render() {\n    console.log(\"Form username\", this.state.list);\n\n    return (\n      <form action=\"\" className=\"messagesForm\">\n        <div className=\"messageArea\" id=\"scrollDiv\">\n          {this.state.list.map((item, id) => {\n            \n            if (item.userName === this.props.user) {\n                \n              return (\n                <Message key={id} message={item} class=\"message rightMessage\" />\n\n              );\n            } else {\n              return (\n                <Message key={id} message={item} class=\"message leftMessage\" />\n              );\n            }\n            \n          })}\n        </div>\n        \n        <div className=\"messageSend\">\n          <input\n            type=\"text\"\n            placeholder=\"Type message\"\n            value={this.state.message}\n            onChange={this.handleChange.bind(this)}\n            onKeyPress={this.handleKeyPress.bind(this)}\n          />\n          <button onClick={this.handleSend.bind(this)}>Send</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default FormMessage;\n","import React from \"react\";\n\nimport FormMessage from \"./FormMessage\";\nimport { withAuthorization } from \"../Session\";\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {}, \n      users:[]\n    };\n  }\n\n  componentDidMount() {\n    \n     this.props.firebase.auth.onAuthStateChanged(\n      user => {\n        user\n          ? this.setState({ user })\n          : this.setState({ user: null });\n      },\n    );\n\n    this.props.firebase.users().on(\"value\", snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key\n      }));\n\n      this.setState({\n        users: usersList\n      });\n    });\n\n  }\n\n  render() {\n    console.log(\"User\", this.state.users);\n    var name=\"\"\n    this.state.users.map(user => {\n      if(user.email == this.state.user.email){\n        name = user.username;\n      }});\n    console.log(\"Name\", name);\n    return (\n      // {users.map(user => (\n      //   if(user.email == this.state.user.email){\n\n      //   }\n      // ))}\n      <div>\n        <FormMessage user={name} />\n      </div>\n    );\n  }\n}\n\nconst condition = user => !!user;\n\nexport default withAuthorization(condition)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form className=\"passwords\" onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from \"react\";\n\nimport { AuthUserContext } from \"../Session\";\nimport { PasswordForgetForm } from \"../PasswordForget\";\nimport PasswordChangeForm from \"../PasswordChange\";\nimport { withAuthorization } from \"../Session\";\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst authCondition = authUser => !!authUser;\n\nexport default withAuthorization(authCondition)(AccountPage);\n","import React, { Component } from \"react\";\n\nimport { withFirebase } from \"../Firebase\";\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ users: [], loading: true });\n\n    this.props.firebase.users().on(\"value\", snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    // this.props.firebase\n    //   .users()\n    //   .on(\"child_removed\")\n    //   .off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h1>Admin</h1>\n\n        {loading && <div>Loading ...</div>}\n\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <div>\n    <ul>\n      {users.map(user => (\n        <li key={user.uid}>\n          <span>\n            <strong>ID:</strong> {user.uid}\n          </span>\n          <br />\n          <span>\n            <strong>E-Mail:</strong> {user.email}\n          </span>\n          <br />\n          <span>\n            <strong>Username:</strong> {user.username}\n          </span>\n          <hr/>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default withFirebase(AdminPage);\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing/index';\nimport LandingOut from '../Landing/out';\n\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nconst App = () => (\n  <Router>\n    <div >\n      <Navigation />\n\n\n      <Route exact path={ROUTES.LANDINGIN} component={LandingPage} />\n      <Route exact path={ROUTES.LANDINGOUT} component={LandingOut} />\n\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route\n        exact\n        path={ROUTES.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={ROUTES.HOME} component={HomePage} />\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}